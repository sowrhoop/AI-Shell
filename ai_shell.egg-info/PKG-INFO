Metadata-Version: 2.4
Name: ai-shell
Version: 0.1.0
Summary: A production-ready CLI to chat with OpenAI models, with streaming, config, and history.
Author: Sowrhoop Raaj B
License: AGPL-3.0-or-later
Project-URL: Homepage, https://github.com/sowrhoop/AI-Shell
Project-URL: Repository, https://github.com/sowrhoop/AI-Shell
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: openai>=1.25.0
Requires-Dist: typer>=0.12.3
Requires-Dist: rich>=13.7.1
Requires-Dist: platformdirs>=4.2.2
Requires-Dist: python-dotenv>=1.0.1
Requires-Dist: tenacity>=8.2.3
Dynamic: license-file

# AI Shell

A production‑ready, feature‑rich CLI to chat with OpenAI models. Includes interactive chat with streaming, model management, config and history, file/image attachment, and a clean UX.

[![AI Shell Logo](assets/ai-shell-logo.png)](https://github.com/sowrhoop/AI-Shell)

## Table of Contents

-   [Features](#features)
-   [Prerequisites](#prerequisites)
-   [Installation](#installation)
-   [API Key Setup](#api-key-setup)
-   [Usage](#usage)
-   [Converting to a Standalone Executable (.exe)](#converting-to-a-standalone-executable-exe)
-   [Error Handling](#error-handling)
-   [Future Development](#future-development)
-   [Author](#author)
-   [License](#license)

## Features

- **Interactive chat:** Streamed responses, Markdown rendering, and in‑REPL commands.
- **Model management:** List models and switch quickly.
- **Config:** Per‑user config with defaults; `--set key=value` updates.
- **History:** Auto‑save conversations; list, load, and continue sessions.
- **Attachments:** Include text files or images in prompts (images via data URLs).
- **One‑shot ask:** Non‑interactive `ask` command with streaming.
- **Resilient:** Retries, helpful errors, and `.env` support.

## Prerequisites

Before you begin, ensure you have the following installed on your Windows system:

* **Python 3.8+:** You can download it from [python.org](https://www.python.org/downloads/windows/). Make sure to check "Add Python to PATH" during installation.
* **pip:** Python's package installer (usually comes with Python).

## Installation

- From source (recommended during development):
  - Create and activate a virtual environment
  - `pip install -e .`
  - You’ll get the `ai-shell` console command

## API Key Setup

**This is a crucial step!** The application requires your OpenAI API key to function. For security, it's highly recommended to set it as an environment variable rather than embedding it directly in the code.

1.  **Obtain your OpenAI API Key:**
    * Go to the [OpenAI Platform](https://platform.openai.com/).
    * Sign up or log in.
    * Navigate to "API keys" (usually under your user icon or in the left sidebar).
    * Click "Create new secret key" and **copy the key immediately**. You won't see it again.

2.  **Set the API Key as an Environment Variable (Windows):**
    Open **Command Prompt as an Administrator** and run the following command. Replace `"your_openai_api_key_here"` with the actual key you copied.

    ```cmd
    setx OPENAI_API_KEY "your_openai_api_key_here"
    ```
    After running this, close the current Command Prompt/PowerShell window and open a new one for the change to take effect.

    You can verify it by typing `echo %OPENAI_API_KEY%` in a new Command Prompt.

## Usage

- Interactive chat: `ai-shell chat`
- One‑shot ask: `ai-shell ask "Explain sockets in Python"`
- List models: `ai-shell models`
- Config: `ai-shell config --set model=gpt-4.1-mini --set temperature=0.6`
- Show important paths: `ai-shell path`

Inside `ai-shell chat`, type `:help` for commands:

```
  :help                Show help
  :model <name>        Change model
  :temp <value>        Set temperature
  :system <text>       Set system prompt
  :attach <path>       Attach text or image to next prompt
  :new                 Start a new conversation
  :save                Save conversation
  :load <id|path>      Load a previous conversation
  :history             List saved conversations
  :config              Show current config
  :exit                Exit
```

## Converting to a Standalone Executable (.exe)

You can convert this Python script into a single executable file for Windows using `PyInstaller`. This allows users to run the application without installing Python or its dependencies.

1.  **Install PyInstaller:**
    ```bash
    pip install pyinstaller
    ```

2.  **Generate the .exe:**
    Navigate to the directory containing `AI-Shell.py` in your Command Prompt/PowerShell (with the virtual environment activated or PyInstaller installed globally), and run:
    ```bash
    pyinstaller --onefile AI-Shell.py
    ```
    This will create a `dist` folder in your current directory.

3.  **Run the .exe:**
    Inside the `dist` folder, you will find `AI-Shell.exe`. You can double-click it or run it from the command line.

    **Note:** Users running the `.exe` will still need to have the `OPENAI_API_KEY` environment variable set on their system.

## Error Handling

- Missing API key: ensure `OPENAI_API_KEY` is set; `.env` files are respected.
- Network/API issues: operations retry briefly with exponential backoff.
- The default model is `gpt-4.1-mini`. Override via config or CLI.

---

## Future Development

- Tool/function calling with pluggable local tools
- Export sessions to Markdown
- Multi‑provider support (Azure OpenAI, etc.)

## Author

**Sowrhoop Raaj B**

## License

This project is licensed under the **GNU Affero General Public License v3.0 (AGPLv3)**. See the `LICENSE` file for details.
